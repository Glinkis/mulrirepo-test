{"version":3,"sources":["webpack:///./src/utils/styled.tsx","webpack:///./src/themes/theme-a.ts","webpack:///./src/themes/theme-b.ts","webpack:///./src/components/layout.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["styled","default","createGlobalStyle","css","ThemeProvider","keyframes","theme","colors","primary","GlobalStyle","_templateObject","Layout","_ref","children","_React$useState","React","useState","themeA","setTheme","useEffect","interval","setInterval","themeB","clearInterval","useThemeTransition","react_default","a","createElement","Fragment","createContext","PropTypes","object","string","isRequired","func","Header","header","withConfig","displayName","componentId","props","gatsby_link_default","to","IndexPage","layout","m","module","exports","require","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"gJAUWA,IAATC,QAEAC,KADAC,MACAD,mBAEAE,KADAC,YACAD,eAIaJ,ICVAM,EANM,CACnBC,OAAQ,CACNC,QAAS,WCIEF,EANM,CACnBC,OAAQ,CACNC,QAAS,wMCCb,IAAMC,EAAcP,EAAHQ,KA6CFC,EAbA,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,SACVP,EArBmB,WAAM,IAAAQ,EACLC,IAAMC,SAASC,GAAlCX,EADwBQ,EAAA,GACjBI,EADiBJ,EAAA,GAa/B,OAVAC,IAAMI,UAAU,WACd,IAAMC,EAAWC,YAAY,WAC3BH,EAASZ,IAAUgB,EAASL,EAASK,IACpC,KAEH,OAAO,WACLC,cAAcH,KAEf,CAACd,EAAOY,IAEJZ,EAQOkB,GAEd,OACEC,EAAAC,EAAAC,cAACvB,EAAD,CAAeE,MAAOA,GACpBmB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAClB,EAAD,MACCI,6CChCkBE,IAAMc,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,KCrDtB,IAAMC,EAASnC,EAAOoC,OAAVC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,YAAGvC,CAAH,oGACI,SAAAwC,GAAK,OAAIA,EAAMlC,MAAMC,OAAOC,UAiB7B4B,EAAA,SAAAxB,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACbY,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAMgB,GAAG,KAAK7B,MCfL8B,UANG,kBAChBlB,EAAAC,EAAAC,cAACiB,EAAD,KACEnB,EAAAC,EAAAC,cAACS,EAAD,sCCNJ,IAAsBS,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAE5C,SAAY4C,oGCMzCI,EAAmB,SAAArC,GAAkB,IAAfsC,EAAetC,EAAfsC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOvC,IAAMY,cAAc4B,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBU,UAAY,CAC3BT,SAAUpB,IAAU8B,MAAM,CACxBN,SAAUxB,IAAUE,OAAOC,aAC1BA,YAGUgB","file":"component---src-pages-index-tsx-ce3aec6c6663f5291143.js","sourcesContent":["import * as styledComponents from 'styled-components'\r\nimport { Color } from 'csstype'\r\n\r\nexport interface Theme {\r\n  colors: {\r\n    primary: Color\r\n  }\r\n}\r\n\r\nconst {\r\n  default: styled,\r\n  css,\r\n  createGlobalStyle,\r\n  keyframes,\r\n  ThemeProvider,\r\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<Theme>\r\n\r\nexport { css, createGlobalStyle, keyframes, ThemeProvider }\r\nexport default styled\r\n","import { Theme } from '../utils/styled'\r\n\r\nconst theme: Theme = {\r\n  colors: {\r\n    primary: 'purple',\r\n  },\r\n}\r\n\r\nexport default theme\r\n","import { Theme } from '../utils/styled'\r\n\r\nconst theme: Theme = {\r\n  colors: {\r\n    primary: 'darkblue',\r\n  },\r\n}\r\n\r\nexport default theme\r\n","import React from 'react'\r\nimport { createGlobalStyle, ThemeProvider } from '../utils/styled'\r\nimport themeA from '../themes/theme-a'\r\nimport themeB from '../themes/theme-b'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font-family: sans-serif;\r\n    background-color: #eaeaea;\r\n  }\r\n\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst useThemeTransition = () => {\r\n  const [theme, setTheme] = React.useState(themeA)\r\n\r\n  React.useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTheme(theme === themeB ? themeA : themeB)\r\n    }, 2000)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [theme, setTheme])\r\n\r\n  return theme\r\n}\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst Layout = ({ children }: Props) => {\r\n  const theme = useThemeTransition()\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <>\r\n        <GlobalStyle />\r\n        {children}\r\n      </>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled from '../utils/styled'\r\n\r\nconst Header = styled.header`\r\n  background: ${props => props.theme.colors.primary};\r\n  transition: all 500ms;\r\n\r\n  > h1 {\r\n    padding: 1.5rem;\r\n\r\n    > a {\r\n      color: white;\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport default ({ children }: Props) => (\r\n  <Header>\r\n    <h1>\r\n      <Link to=\"/\">{children}</Link>\r\n    </h1>\r\n  </Header>\r\n)\r\n","import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport Header from '../components/header'\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <Header>Header</Header>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}